//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\nahuel\Desktop\Dise√±o\TpDiuj\TpIntegradorDiuj\ANTLR\Combined1.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace TpIntegradorDiuj.ANTLR {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="Combined1Parser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public interface ICombined1Listener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>suma</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSuma([NotNull] Combined1Parser.SumaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>suma</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSuma([NotNull] Combined1Parser.SumaContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>division</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivision([NotNull] Combined1Parser.DivisionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>division</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivision([NotNull] Combined1Parser.DivisionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>parentesis</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentesis([NotNull] Combined1Parser.ParentesisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parentesis</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentesis([NotNull] Combined1Parser.ParentesisContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>indicador</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndicador([NotNull] Combined1Parser.IndicadorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>indicador</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndicador([NotNull] Combined1Parser.IndicadorContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>numero</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumero([NotNull] Combined1Parser.NumeroContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numero</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumero([NotNull] Combined1Parser.NumeroContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>resta</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResta([NotNull] Combined1Parser.RestaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>resta</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResta([NotNull] Combined1Parser.RestaContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>producto</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProducto([NotNull] Combined1Parser.ProductoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>producto</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProducto([NotNull] Combined1Parser.ProductoContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Combined1Parser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNum([NotNull] Combined1Parser.NumContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Combined1Parser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNum([NotNull] Combined1Parser.NumContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] Combined1Parser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] Combined1Parser.ExprContext context);
}
} // namespace TpIntegradorDiuj.ANTLR
