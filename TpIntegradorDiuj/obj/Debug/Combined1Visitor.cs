//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\nahuel\Desktop\Dise√±o\TpDiuj\TpIntegradorDiuj\ANTLR\Combined1.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace TpIntegradorDiuj.ANTLR {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="Combined1Parser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public interface ICombined1Visitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>suma</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSuma([NotNull] Combined1Parser.SumaContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>division</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDivision([NotNull] Combined1Parser.DivisionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parentesis</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParentesis([NotNull] Combined1Parser.ParentesisContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>indicador</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndicador([NotNull] Combined1Parser.IndicadorContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>numero</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumero([NotNull] Combined1Parser.NumeroContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>resta</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResta([NotNull] Combined1Parser.RestaContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>producto</c>
	/// labeled alternative in <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProducto([NotNull] Combined1Parser.ProductoContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNum([NotNull] Combined1Parser.NumContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] Combined1Parser.ExprContext context);
}
} // namespace TpIntegradorDiuj.ANTLR
